% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggPedigree.R
\name{ggPedigree}
\alias{ggPedigree}
\title{Plot a custom pedigree diagram}
\usage{
ggPedigree(
  ped,
  famID_col = "famID",
  personID_col = "personID",
  momID_col = "momID",
  dadID_col = "dadID",
  code_male = 1,
  status_col = NULL,
  config = list()
)
}
\arguments{
\item{ped}{A data frame containing the pedigree data.}

\item{famID_col}{Character string specifying the column name for family IDs.}

\item{personID_col}{Character string specifying the column name for individual IDs.}

\item{momID_col}{Character string specifying the column name for mother IDs. Defaults to "momID".}

\item{dadID_col}{Character string specifying the column name for father IDs. Defaults to "dadID".}

\item{code_male}{Numeric value specifying the male code (typically 0 or 1). Defaults to 1.}

\item{status_col}{Character string specifying the column name for affected status. Defaults to NULL.}

\item{config}{A list of configuration options for customizing the plot. The list can include:
- `spouse_segment_color`: Color for spouse segments (default: "pink").
- `sibling_segment_color`: Color for sibling segments (default: "blue").
- `parent_segment_color`: Color for parent segments (default: "green").
- `offspring_segment_color`: Color for offspring segments (default: "black").
- `text_size`: Size of the text labels (default: 3).
- `point_size`: Size of the points (default: 4).
- `line_width`: Width of the lines (default: 0.5).
- `generation_gap`: Gap between generations (default: 1).
- `unknown_shape`: shape id for unknown sex (default: 18).
- `female_shape`: shape id for female sex (default: 16).
- `male_shape`: shape id for male sex (default: 15).
- `affected_shape`: shape id for affected individuals (default: 4).
- `sex_shape_labs`: labels for sex variable  (default: c("Female", "Male", "Unknown"))}
}
\value{
A ggplot object representing the pedigree diagram.
}
\description{
This function takes a pedigree dataset and generates a custom ggplot2-based pedigree diagram.
It processes the data using `ped2fam()`, calculates coordinates and family connections, and
returns a ggplot object with customized styling.
}
\examples{
library(BGmisc)
data("potter")
ggPedigree(potter, famID_col = "famID", personID_col = "personID", code_male = 1)

data("hazard")
ggPedigree(hazard, famID_col = "famID", personID_col = "ID", code_male = 0)

}
